<?php
namespace app\modules\v1\controllers;

use common\models\TransactionTotal;
use common\models\app\AppAdvertise;
use yii;
use yii\filters\auth\HttpBearerAuth;
use app\modules\v1\controllers\BaseActiveController;
use app\models\entities\User;
use app\models\entities\app\AppImages;
use common\models\entities\Business;
use common\models\entities\Region;

class IndexController extends BaseActiveController
{

    public $modelClass = 'app\models\entities\app\AppImages';

    public function behaviors()
    {
        $behaviors = parent::behaviors(); // TODO: Change the autogenerated stub
        $behaviors['authenticator'] = [
            'class' => HttpBearerAuth::className(),
            'optional' => [
                'images',
                'system',
                'region-parent',
                'region-son',
                'system-business',
                'featured'
            ]
        ];
        return $behaviors;
    }

    /**
     * 获得首页图片
     *
     * @param unknown $appImagesTypeId
     *            图片类型
     * @return array|\yii\db\ActiveRecord[]
     */
    public function actionImages()
    {
        $model = AppImages::find();
        $model->andWhere([
            'app_user_id' => $this->appId,
            'status' => AppImages::NORMAL
        ]);
        
        $model->andFilterWhere([
            'app_images_type_id' => $this->request->post('app_images_type_id')
        ]);
        $model->orderBy([
            'sequence' => SORT_ASC,
            'id' => SORT_ASC
        ]);
        $model->select([
            'id',
            'explain',
            'image',
            'background_image',
            'location_url',
            'custom_url',
            'sequence',
            'created_at'
        ]);
        $model->asArray();
        return [
            'status' => 0,
            'code' => 200,
            'message' => [],
            'data' => $model->all()
        ];
    }

    /**
     * APP、商家、系统相关的配置说明
     *
     * @return mixed[]|array[]
     */
    public function actionSystem()
    {
        $data['service'] = [
            'version' => Yii::$app->params['version'],
            'imagesUrl' => Yii::$app->params['oss']['webUrl']
        ];
        $data['app'] = $this->appModel->toArray();
        $data['agent'] = $this->agentModel->toArray();
        return [
            'status' => 0,
            'code' => 200,
            'message' => [],
            'data' => $data
        ];
    }

    /**
     * 获得商业模式
     *
     * @return multitype:number multitype: Ambigous <\yii\db\static, NULL>
     */
    public function actionSystemBusiness()
    {
        $model = Business::findOne($this->agentId);
        return [
            'status' => 0,
            'code' => 200,
            'message' => [],
            'data' => $model
        ];
    }

    /**
     * 三级城市联动
     * 根据城市ID获得子城市
     *
     * @param number $gb_code            
     */
    public function actionRegionSon()
    {
        $regionId = $this->request->post('region_id');
        $model = Region::findOne([
            'region_id' => $regionId
        ]);
        if (empty($model)) {
            return [
                'status' => 0,
                'code' => 200,
                'message' => [],
                'data' => []
            ];
        }  
        return [
            'status' => 0,
            'code' => 200,
            'message' => [],
            'data' => $model->getRegionSon()
                ->orderBy([
                'sort_order' => SORT_ASC
            ])
                ->all()
        ];
    }

    /**
     * 三级城市联动
     * 根据城市ID获得父城市
     *
     * @param number $gb_code            
     */
    public function actionRegionParent()
    {
        $regionId = $this->request->post('region_id');
        $model = Region::findOne([
            'region_id' => $regionId
        ]);
        if (empty($model)) {
            return [
                'status' => 0,
                'code' => 200,
                'message' => [],
                'data' => []
            ];
        }
        return [
            'status' => 0,
            'code' => 200,
            'message' => [],
            'data' => $model->getRegionParent()
                ->orderBy([
                'sort_order' => SORT_ASC
            ])
                ->one()
        ];
    }

    /**
     * 首页广告
     */
    public function actionAdvertise()
    {
        $app_advertise = AppAdvertise::find();
        $app_advertise->andWhere(['status'=>1,'type'=>1]);
        $app_advertise->orderBy(['sort'=>SORT_ASC]);
        $data['scorll_images'] = $app_advertise->all();

        $data['big_images'] = AppAdvertise::findOne(['status'=>1, 'type'=>2]);
        if(empty($data))
        {
            return [
                'status' => 0,
                'code' => 0,
                'message' => [],
                'data' => []
            ];
        }
        return [
            'status' => 0,
            'code' => 200,
            'message' => [],
            'data' => $data
        ];
    }

    /**
     * 累计交易金额
     */
    public function actionTotalMoney()
    {
        $transaction_total = TransactionTotal::findOne(['user_id'=>Yii::$app->user->identity->id]);
        if(empty($transaction_total))
        {
            return [
                'status' => 0,
                'code' => 0,
                'message' => [],
                'data' => []
            ];
        }
        return [
            'status' => 0,
            'code' => 200,
            'message' => [],
            'data' => $transaction_total
        ];
    }

    /**
     * App推荐
     */
    public function actionFeatured(){
        $appAdvertise = AppAdvertise::findOne(['status'=>AppAdvertise::START, 'type'=>AppAdvertise::FEATURED_IMAGE]);
        if(empty($appAdvertise)){
            return [
                'status' => 0,
                'code' => 0,
                'message' => [],
                'data' => []
            ];
        }else{
            $data['image'] = $appAdvertise->image;
            $data['url'] = $appAdvertise->url;
            return [
                'status' => 0,
                'code' => 200,
                'message' => [],
                'data' => $data
            ];
        }
    }
}