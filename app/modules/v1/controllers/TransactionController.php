<?php
namespace app\modules\v1\controllers;

use common\models\Order;
use yii;
use yii\filters\auth\HttpBearerAuth;
use common\models\Transaction;
use common\models\user\nestedSets\UserLink;
use common\models\user\User;

class TransactionController extends BaseActiveController
{
    public $modelClass = 'common\models\user\User';

    public function behaviors()
    {
        $behaviors = parent::behaviors(); // TODO: Change the autogenerated stub
        $behaviors['authenticator'] = [
            'class' => HttpBearerAuth::className(),
        ];

        return $behaviors;
    }

    public function actionList()
    {
        $page = $this->request->post('page', 1);
        $limit = $this->request->post('limit', 10);
        if ($page <= 1) {
            $page = 1;
        }
        $serialNo = $this->request->post('serialNo');

        $userLink = UserLink::findOne([
            'user_id' => Yii::$app->user->id
        ]);
        $ids_array = [Yii::$app->user->id => Yii::$app->user->id];
        $childrenModel = $userLink->children();
        $childrenModel->andWhere([
            'agent_id' => Yii::$app->user->identity->agent_id
        ]);
        $childrenModel->select([
            'user_id'
        ]);

//        所有下级
        $children_ids = $childrenModel->indexBy('user_id')->column();
        $ids_array = array_merge($ids_array,$children_ids);

        $Transaction = Transaction::find();
        $Transaction->select(['id','merchantId','merchantName','user_id','agent_id','created_at','txAmt']);
        $Transaction->andWhere(['agent_id'=>Yii::$app->user->identity->agent_id]);
        $Transaction->andWhere(['in','user_id',$ids_array]);
        $Transaction->andFilterWhere(['or',['like','serialNo',$serialNo],['like','merchantName',$serialNo]]);

        if ($this->request->post('created_at_start')) {
            $Transaction->andFilterWhere([
                '>=',
                'created_at',
                strtotime($this->request->post('created_at_start') . ' 00:00:00')
            ]);
        }
        if ($this->request->post('created_at_end')) {
            $Transaction->andFilterWhere([
                '<=',
                'created_at',
                strtotime($this->request->post('created_at_end') .' 23:59:59')
            ]);
        }

        $Transaction->orderBy(['created_at'=>SORT_DESC]);
        $offset = ($page - 1) * $limit;
        $Transaction->offset($offset)->limit($limit);

        $result = $Transaction->asArray()->all();
        if(empty($result))
        {
            return [
                'status' => 0,
                'code' => 0,
                'message' => '没有数据',
                'data' => []
            ];
        }
        foreach($result as $key => $val)
        {
            $data[$key]['id'] = $val['id'];
            $data[$key]['user_id'] = $val['user_id'];
            $data[$key]['merchantName'] = $val['merchantName'];
            $data[$key]['txAmt'] = $val['txAmt'];
            $data[$key]['created_at'] = date('Y-m-d H:i:s',$val['created_at']);
        }
        return [
            'status' => 0,
            'code' => 200,
            'message' => [
                ''
            ],
            'data' => $data
        ];
    }

//    获取卡类型
    public function actionTypeList()
    {
        $i = 0;
        $cardType = [0=>'全部',1=>'借记卡',2=>'贷记卡'];
        foreach($cardType as $key => $val)
        {
            $data[$i]['type'] = $val;
            $data[$i]['id'] = $key;
            $i++;
        }
        return [
            'status' => 0,
            'code' => 200,
            'message' => [
                ''
            ],
            'data' => $data
        ];
    }

    /**
     * @return array
     * 交易统计
     */
    public function actionStatistics()
    {

        // 获取该用户所有下级
        $user = User::findOne(['id'=>Yii::$app->user->id]);
        $children = $user->userLink->children()->asArray()->all();

        $ids_array  = [];
        foreach($children as $key => $val)
        {
            $ids_array[] = $val['user_id'];
        }
        array_push($ids_array,Yii::$app->user->id);

        $Transaction = Transaction::find();
        $Transaction->andWhere(['agent_id'=>Yii::$app->user->identity->agent_id]);
        $Transaction->andWhere(['in','user_id',$ids_array]);

        $data['total_amount'] = $Transaction->sum('txAmt') ? $Transaction->sum('txAmt') : 0;
//        今日总交易额
        $today_total_money = $Transaction->andWhere(['between','txTime',date('Y-m-d 00:00:00'),date('Y-m-d 23:59:59')]);
        $data['today_total_amount'] = $today_total_money->sum('txAmt') ?: 0;

//        本月总交易额
        $month_total_money = Transaction::find()->andWhere(['between','txTime',date('Y-m-01 00:00:00'),date('Y-m-t 23:59:59')]);
        $month_total_money->andWhere(['agent_id'=>Yii::$app->user->identity->agent_id])->andWhere(['in','user_id',$ids_array]);
        $data['month_total_amount'] = $month_total_money->sum('txAmt') ?: 0;


        return [
            'status' => 0,
            'code' => 200,
            'message' => [
                ''
            ],
            'data' => $data
        ];
    }

    public function actionDetail()
    {
        $id = $this->request->post('id');
        $Transaction = Transaction::find();
        $Transaction->select(['id','user_id','merchantId','merchantName','serialNo','txAmt','created_at','orderNo']);
        $Transaction->andWhere(['id'=>$id]);
        $Transaction->with(['user'=>function($q){
            $q->select(['id','user_name','real_name','user_code']);
        }]);
        $data = $Transaction->asArray()->one();
        $data['user']['user_name'] = !empty($data['user']['real_name']) ? $data['user']['real_name'] : $data['user']['user_name'];
        $data['created_at'] = date('Y-m-d H:i:s',$data['created_at']);
        return [
            'status' => 0,
            'code' => 200,
            'message' => [
                ''
            ],
            'data' => $data
        ];
    }

    /**
     * 查看详情
     */
    public function actionDetailList()
    {
        $page = $this->request->post('page', 1);
        $limit = $this->request->post('limit', 10);
        if ($page <= 1) {
            $page = 1;
        }

        $userLink = UserLink::findOne([
            'user_id' => Yii::$app->user->id
        ]);
        $ids_array = [Yii::$app->user->id => Yii::$app->user->id];
        $childrenModel = $userLink->children();
        $childrenModel->andWhere([
            'agent_id' => Yii::$app->user->identity->agent_id
        ]);
        $childrenModel->select([
            'user_id'
        ]);

//        所有下级
        $children_ids = $childrenModel->indexBy('user_id')->column();
        $ids_array = array_merge($ids_array,$children_ids);

//        1本日数据 2本月数据 3上月数据
        $type = $this->request->post('type');
        if($type == 1)
        {
            $createdAtStart = date('Y-m-d 00:00:00');
            $createdAtEnd = date('Y-m-d 23:59:59');

        }else if($type == 2){
            $createdAtStart = date('Y-m-01 00:00:00');
            $createdAtEnd = date('Y-m-t 23:59:59');
        }else{
            $createdAtStart = date("Y-m-d H:i:s",mktime(0, 0 , 0,date("m")-1,1,date("Y")));
            $createdAtEnd = date("Y-m-d H:i:s",mktime(23,59,59,date("m") ,0,date("Y")));
        }

        $Transaction = Transaction::find();
        $Transaction->select(['id','user_id','merchantName','txTime','serialNo','txAmt']);
        $Transaction->andWhere(['in','user_id',$ids_array]);
        $Transaction->andWhere([
            'between',
            'txTime',
            $createdAtStart,
            $createdAtEnd
        ]);
        $Transaction->orderBy([
            'txTime'=>SORT_DESC
        ]);
        $offset = ($page - 1) * $limit;
        $Transaction->offset($offset)->limit($limit);
        $data = $Transaction->asArray()->all();

        if(empty($data))
        {
            return [
                'status' => 0,
                'code' => 0,
                'message' => '没有数据',
                'data' => []
            ];
        }



        return [
            'status' => 0,
            'code' => 200,
            'message' => [
                ''
            ],
            'data' => $data
        ];
    }

//    数据汇总
    public function actionTotalList()
    {
        $page = $this->request->post('page', 1);
        $limit = $this->request->post('limit', 10);
        if ($page <= 1) {
            $page = 1;
        }

        $user_id = [Yii::$app->user->id=>Yii::$app->user->id];
        $userLink = UserLink::findOne([
            'user_id' => Yii::$app->user->id
        ]);
        $childrenModel = $userLink->children();
        $childrenModel->andWhere([
            'agent_id' => Yii::$app->user->identity->agent_id
        ]);
        $childrenModel->select([
            'user_id'
        ]);
        $children_ids = $childrenModel->indexBy('user_id')->column();
        $ids = array_merge($user_id,$children_ids);

        $Transaction = Transaction::find();
        $Transaction->select(['id','user_id','merchantId','merchantName','serialNo','txAmt'=>'sum(txAmt)','created_at']);
        $Transaction->andWhere(['in','user_id',$ids]);

        $offset = ($page - 1) * $limit;
        $Transaction->orderBy(['txAmt'=>SORT_DESC]);
        $Transaction->offset($offset)->groupBy('merchantId')->limit($limit);
        $data = $Transaction->asArray()->all();

        foreach($data as $key => &$val)
        {
            $val['txAmt'] = !empty($val['txAmt']) ? $val['txAmt'] : 0;
        }

        if(empty($data))
        {
            return [
                'status' => 0,
                'code' => 0,
                'message' => '没有数据',
                'data' => []
            ];
        }

        return [
            'status' => 0,
            'code' => 200,
            'message' => [
                ''
            ],
            'data' => $data
        ];
    }

//    数据统计图
    public function actionStatisticsTotal()
    {
        //        date_type=1最近七天 2最近半年     type 支付类型
        $date_type = $this->request->post('date_type');
        $type = $this->request->post('type');

        if(Order::WEEK == $date_type)
        {
            $created_end = date('Y-m-d 23:59:59');
            $created_start = date('Y-m-d',strtotime("-6 days"));
            $unix_time = '%m-%d';
        }else{
            $created_end = date('Y-m-t 23:59:59');
            $created_start = date('Y-m-d H:i:s',strtotime("-5 months",strtotime(date('Y-m-01 00:00:00'))));
            $unix_time = '%m';
        }

//        获取最近七天或半年日期
        $date = Order::getDate($date_type);

        $userLink = UserLink::findOne([
            'user_id' => Yii::$app->user->id
        ]);
        $childrenModel = $userLink->children();
        $childrenModel->andWhere([
            'agent_id' => Yii::$app->user->identity->agent_id
        ]);
        $childrenModel->select([
            'user_id'
        ]);
        $user_id = [Yii::$app->user->id=>Yii::$app->user->id];
        $children_ids = $childrenModel->indexBy('user_id')->column();
        $ids = array_merge($user_id,$children_ids);

        $order = Transaction::find();
        $order->select(['total_money'=>'sum(txAmt)','count'=>'count(*)','created_time'=>'DATE_FORMAT(txTime,"'.$unix_time.'")']);
        $order->andWhere([
            'user_id' => $ids,
        ]);

//        type==1借记卡 2 贷记卡
        if($type == 1){
            $order->andFilterWhere([
                'in',
                'cardType',
                ['DEBIT_CARD','PREPAID_CARD']
            ]);
        }
        if($type == 2)
        {
            $order->andFilterWhere([
                'in',
                'cardType',
                ['CREDIT_CARD','SEMI_CREDIT_CARD']
            ]);
        }

        $order->andWhere([
            'between',
            'txTime',
            $created_start,
            $created_end
        ]);
        $order->groupBy('created_time');
        $data = $order->asArray()->all();
//        $data = $order->createCommand()->queryAll();
//        print_r($data);die;

//        exist_date 数据库已存在的日期数据
        $date_exist = [];
        foreach($data as $key => $val)
        {
            if(date('m') == $val['created_time'])
            {
                $data[$key]['created_time'] = '本月';
                $date_exist[$key] = '本月';
            }elseif(date('m-d') == $val['created_time'])
            {
                $data[$key]['created_time'] = '今天';
                $date_exist[$key] = '今天';
            }
            else{
                $date_exist[$key] = $val['created_time'];
            }
        }

        $date = array_diff($date,$date_exist);

        $result = [];
        foreach($date as $key=> $val)
        {
            $result[$key]['total_money'] = '0';
            $result[$key]['count'] = '0';
            $result[$key]['created_time'] = $val;
        }
        $data = array_merge($data,$result);
        array_multisort(array_column($data,'created_time'),SORT_DESC,$data);

        return [
            'status' => 0,
            'code' => 200,
            'message' => [
                ''
            ],
            'data' => $data
        ];
    }

}